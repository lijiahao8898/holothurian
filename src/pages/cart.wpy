<template>
    <view class="cart">
        <view class="cart-section">
            <view class="cart-number">共{{cartNumber}}件商品</view>
            <view wx:if="{{cartList.length > 0}}" class="cart-wrapper">

                <repeat for="{{cartList}}" key="{{item.id}}">
                    <van-swipe-cell id="swipe-cell" right-width="{{ 50 }}" async-close bind:close="onClose({{item.id}})">
                        <view class="cart-item">
                            <view class="cart-item__checkbox">
                                <van-checkbox value="{{item.checked}}" bind:change="onChange({{item.id}})"></van-checkbox>
                            </view>
                            <image lazy-load class="cart-item__image" mode="aspectFill" src="{{item.skuImgUrl}}" @tap="goGoodsDetail({{item.itemId}})"></image>
                            <view class="cart-container">
                                <view class="cart-container__name">{{item.itemName}}</view>
                                <view class="cart-container__sku">{{item.skuAttr}}</view>
                                <view class="cart-container-price">
                                    <view class="cart-container-price__discount">{{filter.accDiv(item.skuSalePrice, 100)}}</view>
                                </view>
                                <view class="cart-container__stepper">
                                    <van-stepper
                                        value="{{item.number}}"
                                        bind:change="onChangeNumberHandle({{item.id}})"
                                        integer/>
                                </view>
                            </view>
                        </view>
                        <view slot="right" class="cart-item__close">删除</view>
                    </van-swipe-cell>
                </repeat>

                <view class="cart-submit">
                    <van-submit-bar
                        price="{{price}}"
                        button-text="下单"
                        bind:submit="onClickButton"
                        tip="{{ true }}"
                        custom-class="cart-submit__bar"
                        button-class="cart-submit__button"
                    >
                        <view slot="tip" class="cart-submit__tip">
                            <van-icon class="cart-submit__icon" name="warning-o" />
                            <view>左滑删除商品</view>
                        </view>
                        <van-checkbox class="cart-submit__checkbox" value="{{checkBoxAll}}" bind:change="onChangeAllHandle"></van-checkbox>
                    </van-submit-bar>
                </view>

            </view>
            <view wx:else class="cart-wrapper">
                <view class="no-item">
                    您的购物车空空如也~
                </view>
            </view>
        </view>
    </view>
</template>

<script>
    import wepy from 'wepy';
    import API from '@/utils/http/api';
    import filter from '../utils/filter/index.wxs'

    const api = new API();

    export default class cart extends wepy.page {
        config = {
            navigationBarTitleText: '购物车',
            usingComponents: {
                'van-checkbox': '../components/vant-weapp/checkbox/index',
                'van-checkbox-group': '../components/vant-weapp/checkbox-group/index',
                'van-stepper': '../components/vant-weapp/stepper/index',
                "van-submit-bar": "../components/vant-weapp/submit-bar/index",
                "van-swipe-cell": "../components/vant-weapp/swipe-cell/index",
                "van-icon": "../components/vant-weapp/icon/index"
            }
        };

        wxs = {
            filter
        };

        data = {
            cartNumber: 0,
            cartList: [],
            checkBoxAll: false
        };

        computed = {
            price () {
                let price = 0;
                this.cartList.forEach(item => {
                    if(item.checked) {
                        price += (item.skuSalePrice * item.number);
                    }
                });
                return price;
            },

            checkBoxAll () {
                let n = 0;
                this.cartList.forEach(item => {
                    if(item.checked) {
                        n += 1;
                    }
                });
                return n === this.cartList.length;
            }
        };

        onShow () {
            this.getCartList();
        }

        async onPullDownRefresh () {
            await this.getCartList();
            wepy.stopPullDownRefresh()
        }

        // 获取购物车列表
        async getCartList () {
            wepy.showLoading({
                title: '拼命加载中...',
            });
            const data = await api.getCartList();
            if (data.code === 200) {
                this.cartList = [...data.data];
                this.cartNumber = this.cartList.length;
                this.$apply();
            }
            wepy.hideLoading({
                title: '拼命加载中...',
            });
        }

        // 删除购物车商品
        async deleteCartItem (id) {
            wepy.showLoading({
                title: '正在删除...',
            });
            const data = await api.deleteCartItem({
                id
            });
            wepy.hideLoading();
            wepy.showToast({
                title: '删除成功！',
                icon: 'success',
                duration: 2000
            });

            if(data.code === 200) {
                let cartList = [...this.cartList];
                cartList.forEach((item, index) => {
                    if(item.id === Number(id)) {
                        cartList.splice(index, 1)
                    }
                });
                console.log(cartList);
                this.cartList = [...cartList];
                this.$apply();
            }
        }

        methods = {
            // checkbox
            onChange (id, event) {
                this.cartList.forEach(item => {
                    if(item.id === Number(id)) {
                        item.checked = event.detail;
                        this.$apply();
                    }
                });
            },

            // 去商品详情
            goGoodsDetail (id) {
                wepy.navigateTo({
                    url: `/pages/goodsDetail?goodsId=${id}`
                });
            },

            // 修改商品的数目
            async onChangeNumberHandle (id, event) {
                const data = await api.updateCartItemNumber({
                    id: id,
                    number: event.detail
                });
                if(data.code === 200) {
                    this.cartList.forEach(item => {
                        if(item.id === Number(id)) {
                            item.number = event.detail;
                            this.$apply();
                        }
                    });
                }
            },

            // 下单
            onClickButton () {
                wepy.showLoading({
                    title: '正在创建订单'
                });

                const cartList = [...this.cartList];
                let currentList = [];

                cartList.forEach(item => {
                    if(item.checked) {
                        currentList.push(item)
                    }
                });
                wepy.setStorage({
                    key: 'orderInfo',
                    data: [...currentList]
                }).then((res) => {
                    console.log(res);
                    wepy.hideLoading();
                    wepy.navigateTo({
                        url: `/pages/orderConfirm?tf=1`
                    });
                });
            },

            // checkbox all
            onChangeAllHandle (event) {
                this.cartList.forEach(item => {
                    item.checked = event.detail;
                });
                this.$apply();
            },

            // 删除 handle
            onClose (id, event) {
                const { position, instance } = event.detail;
                switch (position) {
                    case 'left':
                    case 'cell':
                        instance.close();
                        break;
                    case 'right':
                        wepy.showModal({
                            title: '温馨提示',
                            content: '确定要删除选中的内容吗？',
                            cancelColor: '#ddd',
                            confirmColor: '#1ea9f0',
                        }).then((res) => {
                            instance.close();
                            if (res.confirm) {
                                this.deleteCartItem(id)
                            } else if (res.cancel) {

                            }
                        });
                        break;
                }
            }
        }
    }
</script>

<style type="text/scss" lang="scss" scoped>
    @import "../../src/assets/config";

    .no-item {
        font-size: 14px;
        color: $font-color-dark;
        text-align: center;
        margin-top: 150px;
    }

    .cart {
        &-section {
            color: #fff;
            overflow: hidden;
            position: relative;
        }
        &-number {
            font-size: $font-size-base;
            background: $primary-color;
            padding: 10rpx 15rpx 140rpx 15rpx;
            position: absolute;
            left: 0;
            right: 0;
        }
        &-wrapper{
            padding: 40px 0 98px 0;
        }
        &-item {
            background: $white;
            margin: 4px;
            position: relative;
            overflow: hidden;
            border-radius: $border-radius-large;
            &__close {
                background: $primary-color-red;
                color: $white;
                height: inherit;
                width: 50px;
                line-height: 120px;
                font-size: 12px;
                text-align: center;
                border-radius: 8px 0 0 8px;
            }

            &__image {
                width: 100px;
                height: 100px;
                margin: 5px 5px 5px 40px;
                float: left;
            }

            &__checkbox {
                position: absolute;
                left: 10px;
                top: 45px;
            }
        }

        &-submit {
            position: fixed;
            bottom: 0;
            &__checkbox {
                margin-left: 15px;
            }
            &__bar {
                z-index: 256;
            }
            &__button {
                background-color: $primary-color;
            }
            &__tip {
                height: 21px;
                line-height: 21px;
                font-size: $font-size-base;
                position: relative;
                > view {
                    margin-left: 20px;
                }
            }
            &__icon {
                position: absolute;
                top: 2px;
            }
        }

        &-container {
            float: left;
            margin: 10px 0 0 10px;
            position: relative;
            height: 110px;
            min-width: 400rpx;

            &__name {
                font-size: 12px;
                color: $font-color-dark;
                max-width: 420rpx;
                overflow: hidden;
                text-overflow: ellipsis;
                white-space: nowrap;
            }

            &__sku {
                font-size: 12px;
                color: $font-color-light;
                max-width: 420rpx;
                overflow: hidden;
                text-overflow: ellipsis;
                white-space: nowrap;
                margin-top: 4px;
            }

            &-price {
                font-size: 12px;
                text-align: left;
                color: red;
                padding: 0 4px;
                &__discount{
                    display: inline-block;
                    position: relative;
                    margin: 10px 0 0 10px;
                    font-size: 14px;
                    &:before{
                        content: '￥';
                        font-size: 14px;
                        position: absolute;
                        left: -15px;
                        top: 0;
                    }
                }
            }

            &__stepper{
                position: absolute;
                bottom: 5px;
                right: 0;
                z-index: 0;
            }
        }
    }
</style>

<style type="text/scss" lang="scss">
    @import "../../src/assets/config";
    .cart {
        &-submit {
            &__bar {
                z-index: 10999!important;
            }
            &__button {
                background-color: $primary-color!important;
                border: 1px solid $primary-color!important;
            }
        }
    }
</style>
