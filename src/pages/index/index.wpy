<template>
    <view class="container">
        <!-- 轮播图 -->
        <swiperComponent :imgList.sync="imgList" :type.sync="swiperType"></swiperComponent>

        <!-- 类目 -->
        <!-- <view class="section">
            <categoriesList></categoriesList>
        </view> -->

        <!-- 品牌墙 -->
        <view class="section">
            <brand :brandList.sync="brandList"></brand>
        </view>

        <!-- 长图文介绍 start -->
        <view class="section introduce">
            <repeat for="{{articleList}}" key="item.id">
                <view class="introduce-article">
                    <image 
                    lazy-load
                    class="introduce-article__img" 
                    mode="scaleToFill" 
                    src="{{item}}"
                    />
                </view>
            </repeat>
        </view>

        <!-- 商品 start -->
        <view class="section">
            <goods :goodsList.sync="goodsList"></goods>
        </view>

        <!--<button open-type="getUserInfo" bindgetuserinfo="onGotUserInfo">获取用户信息</button>-->
        <!--<view class="userinfo" @tap="handleViewTap">-->
        <!--<image class="userinfo-avatar" src="{{ userInfo.avatarUrl }}" background-size="cover"/>-->
        <!--<view class="userinfo-nickname">{{ userInfo.nickName }}</view>-->
        <!--</view>-->

        <!--<panel>-->
        <!--<view class="title" slot="title">测试数据绑定</view>-->

        <!--<text class="info">{{normalTitle}}</text>-->
        <!--<text class="info">{{setTimeoutTitle}}</text>-->
        <!--<text class="info">{{mixin}}</text>-->
        <!--<text class="info">{{mynum}}</text>-->
        <!--<text class="info">{{now}}</text>-->
        <!--<text class="info">{{num}}</text>-->
        <!--<text class="info">{{asyncNum}}</text>-->
        <!--<text class="info">{{sumNum}}</text>-->
        <!--<button @tap="plus('a')" size="mini"> +  </button>-->
        <!--</panel>-->

        <!--<panel>-->
        <!--<view class="title" slot="title">其它测试</view>-->
        <!--<button @tap="toast" size="mini">第三方组件</button>-->
        <!--<button @tap="communicate" size="mini">组件通信</button>-->
        <!--<button @tap="tap" size="mini">混合TAP事件</button>-->
        <!--</panel>-->

        <!--<panel>-->
        <!--<view class="title" slot="title">测试并发网络请求</view>-->
        <!--<view>返回结果:-->
        <!--<text>{{netrst}}</text>-->
        <!--</view>-->
        <!--<button @tap="request" size="mini"> 点我发起10个请求 </button>-->
        <!--</panel>-->

        <!--<panel>-->
        <!--<view class="title" slot="title">测试组件</view>-->

        <!--<text class="testcounter">计数组件1: </text>-->
        <!--<view class="counterview">-->
        <!--<counter1 @index-emit.user="counterEmit"/>-->
        <!--</view>-->

        <!--<text class="testcounter">计数组件2: </text>-->

        <!--<view class="counterview">-->
        <!--<counter2 :num.sync="mynum"></counter2>-->
        <!--</view>-->
        <!--</panel>-->

        <!--<panel>-->
        <!--<view class="title" slot="title">测试组件Repeat</view>-->
        <!--<repeat for="" index="index" item="item" key="key">-->
        <!--<group :grouplist="item" :indexa="index"></group>-->
        <!--</repeat>-->
        <!--</panel>-->

        <!--<panel>-->
        <!--<view class="title" slot="title">测试列表</view>-->
        <!--<list></list>-->
        <!--</panel>-->

        <!--<toast/>-->
        <!--<vant-button  type="primary">1111</vant-button>-->
        <!-- footer start -->
        <view class="footer">已经到最底部啦~</view>
        <!-- footer end -->
    </view>
</template>

<script>
    import wepy from 'wepy';
    import {connect} from 'wepy-redux';
    import Panel from '@/components/panel'; // alias example
    import Counter from 'counter'; // alias example
    import List from '../../components/list'; // aliasFields example
    import moduleA from 'module-a'; // aliasFields ignore module example
    import Group from '../../components/group';
    import Toast from 'wepy-com-toast';
    import testMixin from '../../mixins/test';
    import goods from '../../components/goods';
    import swiperComponent from '../../components/swiper';
    import categoriesList from '../../components/categoriesList';
    import brand from '../../components/brand';
    import API from '@/utils/http/api'
    let api = new API();

    console.log('moduleA ignored: ', moduleA); // => moduleA ignored: {}

    @connect({
        num (state) {
            return state.counter.num;
        },
        asyncNum (state) {
            return state.counter.asyncNum;
        },
        sumNum (state) {
            return state.counter.num + state.counter.asyncNum;
        }
    })

    export default class Index extends wepy.page {
        config = {
            navigationBarTitleText: '首页',
            usingComponents: {
                'vant-button': '../../components/vant-weapp/button/index'
            }
        };

        components = {
            panel: Panel,
            counter1: Counter,
            counter2: Counter,
            list: List,
            group: Group,
            toast: Toast,
            goods: goods,
            swiperComponent: swiperComponent,
            categoriesList: categoriesList,
            brand
        };

        mixins = [testMixin];

        data = {
            mynum: 20,
            userInfo: '',
            normalTitle: '原始标题',
            setTimeoutTitle: '标题三秒后会被修改',
            swiperType: 1,
            count: 0,
            netrst: '',
            imgList: [],
            goodsList: [],
            brandList: [],
            articleList: [],
        };

        computed = {
            now () {
                return +new Date();
            }
        };

        onLoad (options) {

        }

        onShow () {
            const userInfo = wepy.getStorageSync('userInfo');
            if (!userInfo) {
                // 没有登录授权
                wepy.navigateTo({url: `/pages/authorization?redirectUrl=`});
            } else {
                // this.getGoodsList();
                this.getIndexInformation();
            }
        }

        async onPullDownRefresh () {
            await this.getIndexInformation();
            wepy.stopPullDownRefresh()
        }

        async getIndexInformation () {
            wepy.showLoading({
                title: '拼命加载中...',
            })
            const data = await api.getIndexInformation();
            if(data.code === 200) {
                this.brandList = [...data.data.brandDTOList];
                this.goodsList = [...data.data.itemDTOList];
                this.imgList = [...data.data.carouselDTOList];
                this.articleList = [...data.data.indexImgList];
                this.$apply();
            }
            wepy.hideLoading();
        }

        methods = {
            plus () {
                this.mynum++;
            },
            onGotUserInfo (e) {
                console.log(e);
            },
            toast () {
                let promise = this.$invoke('toast', 'show', {
                    title: '自定义标题',
                    img: 'https://raw.githubusercontent.com/kiinlam/wetoast/master/images/star.png'
                });

                promise.then((d) => {
                    console.log('toast done');
                });
            },
            tap () {
                console.log('do noting from ' + this.$name);
            },
            communicate () {
                console.log(this.$name + ' tap');

                this.$invoke('counter2', 'minus', 45, 6);
                this.$invoke('counter1', 'plus', 45, 6);

                this.$broadcast('index-broadcast', 1, 3, 4);
            },
            request () {
                let self = this;
                let i = 10;
                let map = ['MA==', 'MQo=', 'Mg==', 'Mw==', 'NA==', 'NQ==', 'Ng==', 'Nw==', 'OA==', 'OQ=='];
                while (i--) {
                    wepy.request({
                        url: 'https://www.madcoder.cn/tests/sleep.php?time=1&t=css&c=' + map[i] + '&i=' + i,
                        success: function (d) {
                            self.netrst += d.data + '.';
                            self.$apply();
                        }
                    });
                }
            },
            counterEmit (...args) {
                let $event = args[args.length - 1];
                console.log(`${this.$name} receive ${$event.name} from ${$event.source.$name}`);
            }
        };

        events = {
            'index-emit': (...args) => {
                let $event = args[args.length - 1];
                console.log(`${this.$name} receive ${$event.name} from ${$event.source.$name}`);
            }
        };
    }
</script>
<style lang="scss" type="text/scss">
    @import "./index";
</style>
