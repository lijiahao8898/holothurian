<template>
    <view>
        <view>
            <view class="address-way">配送方式</view>
            <van-radio-group value="{{params.deliveryType}}" bind:change="onChangeDistributionWay" disabled>
                <van-cell-group>
                    <van-cell
                        title="自提"
                        value-class="value-class"
                        clickable
                        data-name="2"
                    >           <van-radio name="2" />
                    </van-cell>
                    <van-cell
                        title="快递"
                        value-class="value-class"
                        clickable
                        data-name="1"
                    >
                        <van-radio name="1" />
                    </van-cell>
                </van-cell-group>
            </van-radio-group>
        </view>
        <view wx:if="{{params.deliveryType == 1}}">
            <van-cell>
                <view slot="title">
                    <repeat for="{{currentAddressList}}" key="item">
                        <view class="address-item">
                            <view>
                                {{item.userName}}
                                <text class="address-item__phone">{{item.phone}}</text>
                            </view>
                            <view>{{item.province}}{{item.city}}{{item.area}}{{item.street}}{{item.detailAddress}}</view>
                        </view>
                    </repeat>
                </view>
            </van-cell>
        </view>
        <view>
            <repeat for="{{goodsInfo}}" key="item.id">
                <view class="goods-item">
                    <image lazy-load class="goods-item__image" mode="aspectFill" src="{{item.imgUrl || item.skuImgUrl}}"
                           @tap="goGoodsDetail({{item.itemId}})"></image>
                    <view class="goods-container">
                        <view class="goods-container__name">{{item.itemName}}</view>
                        <view class="goods-container__sku">{{item.skuAttr}}</view>
                        <view class="goods-container-price">
                            <view class="goods-container-price__discount">{{filter.accDiv(item.skuSalePrice, 100)}}</view>
                        </view>
                        <view class="goods-item__number">x{{item.skuNumber}}</view>
                    </view>
                </view>
            </repeat>
        </view>
        <view>
            <van-cell-group>
                <van-field
                    value="{{ params.remark }}"
                    label="备注"
                    type="textarea"
                    placeholder="请输入备注"
                    autosize
                    bind:change="changeRemark"
                    border="{{ false }}"
                />
            </van-cell-group>
        </view>
        <view class="cart-submit">
            <van-submit-bar
                price="{{price}}"
                button-text="付款"
                bind:submit="wxpay"
                tip="{{ true }}"
                custom-class="cart-submit__bar"
                button-class="cart-submit__button"
            >
            </van-submit-bar>
        </view>
    </view>
</template>

<script>
    import wepy from 'wepy';
    import goods from '../components/goods';
    import API from '@/utils/http/api';
    import filter from '../utils/filter/index.wxs';

    const api = new API();

    export default class orderConfirm extends wepy.page {
        config = {
            navigationBarTitleText: '订单详情',
            usingComponents: {
                'van-radio': '../components/vant-weapp/radio/index',
                'van-radio-group': '../components/vant-weapp/radio-group/index',
                "van-submit-bar": "../components/vant-weapp/submit-bar/index",
                'van-cell': '../../components/vant-weapp/cell/index',
                'van-cell-group': '../../components/vant-weapp/cell-group/index',
                'van-field': '../../components/vant-weapp/field/index',
            }
        };
        data = {
            addressList: [],
            currentAddressList: [],
            goodsInfo: [],
            price: 0,
            params: {
                remark: '',
                deliveryType: '1',       // 1快递，2其他
                tradeFrom: '',
                orderId: ''
            }
        };
        components = {
            goods
        };
        wxs = {
            filter
        };

        onShow () {
            let pages = getCurrentPages();
            let {options} = pages.pop();
            // 订单列表过来的
            this.params.tradeFrom = 1;
            this.params.orderId = options.orderId;
            this.initPage();
            this.getOrderDetail();
            const addressInfo = wepy.getStorageSync('addressInfo');
            if(!addressInfo) {
                this.getAddressList();
            } else {
                this.currentAddressList = addressInfo;
            }
        }

        initPage () {
            this.price = 0;
            this.$apply();
        }

        async getOrderDetail () {
            const res = await api.getOrderDetail({
                orderId: this.params.orderId
            });
            if(res.code === 200) {
                const goodsInfo = [...res.data.orderSkuDTOList];
                const {remark, deliveryType} = res.data;
                this.params.remark = remark;
                this.params.deliveryType = deliveryType.toString();
                this.goodsInfo = [...goodsInfo];
                goodsInfo.forEach(item => {
                    this.price += (item.skuNumber * item.skuSalePrice);
                })
                this.$apply();
            }
        }

        async onPullDownRefresh () {
            wepy.stopPullDownRefresh();
        }

        // 没有的话用address默认的
        async getAddressList () {
            const data = await api.getAddressList();
            if (data.code === 200) {
                this.addressList = [...data.data];
                this.addressList.forEach(item => {
                    if (item.isDefault) {
                        this.currentAddressList.push(item);
                    }
                });
                wepy.setStorage({
                    key: 'addressInfo',
                    data: this.currentAddressList,
                });
                this.$apply();
            }
        }

        methods = {
            upper (e) {
                console.log(e);
            },

            goGoodsDetail (id) {
                wepy.navigateTo({
                    url: `/pages/goodsDetail?goodsId=${id}`
                });
            },

            async wxpay () {
                console.log(this.goodsInfo);
                const orderSkuDTOList = this.goodsInfo.map((item) => {
                    return {
                        skuId: item.id,
                        skuNumber: item.number
                    }
                });
                const data = await api.createOrders({
                    orderSkuDTOList: orderSkuDTOList,
                    recipientAddressId: this.currentAddressList[0].id,
                    ...this.params
                });
                if(data.code === 200) {
                    console.log(data);
                    wepy.showModal({
                        title: '温馨提示',
                        content: '您当前购买的订单ID' + data.data,
                        cancelColor: '#ddd',
                        confirmColor: '#1ea9f0',
                    }).then((res) => {
                        if (res.confirm) {
                            wepy.navigateBack({
                                delta: 1
                            });
                        } else if (res.cancel) {

                        }
                    });
                }
            },

            changeRemark (event) {
                this.params.remark = event.detail
            },

            onChangeDistributionWay (event) {
                this.params.deliveryType = event.detail;
            }
        }
    }
</script>

<style lang="scss" type="text/scss">
    @import "../../src/assets/config";

    .address {
        &-item{
            font-size: 12px;
            color: $font-dark-color;
            background: $white;
            padding: 5px;
            line-height: 20px;
            position: relative;
            &__phone {
                margin-left: 10px;
            }
        }
        &-way{
            color: $font-light-color;
            font-size: 14px;
            margin: 10px 0 5px 10px;
        }
    }

    .goods {
        &-wrapper {
            padding-bottom: 60px;
        }

        &-item {
            background: $white;
            margin: 5px;
            position: relative;
            overflow: hidden;

            &__close {
                background: $primary-color-red;
                color: $white;
                height: inherit;
                width: 65px;
                line-height: 120px;
                font-size: 12px;
                text-align: center;
            }

            &__image {
                width: 80px;
                height: 80px;
                margin: 5px;
                float: left;
            }

            &__number {
                position: absolute;
                right: 0;
                top: 98rpx;
                font-size: 12px;
                color: $font-dark-color;
            }
        }

        &-submit {
            position: fixed;
            bottom: 0;

            &__bar {
                z-index: 256;
            }

            &__button {
                background-color: $primary-color;
            }
        }

        &-container {
            float: left;
            margin: 10px 0 0 10px;
            position: relative;

            &__name {
                font-size: 12px;
                color: $font-dark-color;
                max-width: 500rpx;
                overflow: hidden;
                text-overflow: ellipsis;
                white-space: nowrap;
            }

            &__sku {
                font-size: 12px;
                color: $font-light-color;
                max-width: 200px;
                overflow: hidden;
                text-overflow: ellipsis;
                white-space: nowrap;
                margin-top: 4px;
            }

            &-price {
                font-size: 12px;
                text-align: left;
                color: red;
                padding: 0 4px;
                margin-top: 10px;

                &__discount {
                    display: inline-block;
                    position: relative;
                    margin: 0 0 0 10px;
                    font-size: 14px;

                    &:before {
                        content: '￥';
                        font-size: 14px;
                        position: absolute;
                        left: -15px;
                        top: 0;
                    }
                }
            }

            &__stepper {
                position: absolute;
                bottom: 5px;
                right: 0;
                z-index: 0;
            }
        }
    }

    .cart {
        &-submit {
            position: fixed;
            bottom: 0;
            &__checkbox {
                margin-left: 15px;
            }
            &__bar {
                z-index: 256;
            }
            &__button {
                background-color: $primary-color;
            }
        }
    }
</style>

<style type="text/scss" lang="scss">
    @import "../../src/assets/config";
    .cart {
        &-submit {
            &__bar {
                z-index: 10999!important;
            }
            &__button {
                background-color: $primary-color!important;
                border: 1px solid $primary-color!important;
            }
        }
    }

    .value-class {
        flex: none !important;
    }
</style>

