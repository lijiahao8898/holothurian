<template>
    <view>
        <view>
            <view class="address-way">配送方式</view>
            <van-radio-group value="{{params.deliveryType}}" bind:change="onChangeDistributionWay" disabled>
                <van-cell-group>
                    <van-cell
                        title="自提"
                        value-class="value-class"
                        clickable
                        data-name="2"
                    >           <van-radio name="2" />
                    </van-cell>
                    <van-cell
                        title="快递"
                        value-class="value-class"
                        clickable
                        data-name="1"
                    >
                        <van-radio name="1" />
                    </van-cell>
                </van-cell-group>
            </van-radio-group>
        </view>
        <view wx:if="{{params.deliveryType == 1}}">
            <van-cell>
                <view slot="title">
                    <repeat for="{{currentAddressList}}" key="item">
                        <view class="address-item">
                            <view>
                                {{item.userName}}
                                <text class="address-item__phone">{{item.phone}}</text>
                            </view>
                            <view>{{item.province}}{{item.city}}{{item.area}}{{item.street}}{{item.detailAddress}}</view>
                        </view>
                    </repeat>
                </view>
            </van-cell>
        </view>
        <view>
            <repeat for="{{goodsInfo}}" key="item.id">
                <view class="goods-item">
                    <image lazy-load class="goods-item__image" mode="aspectFill" src="{{item.imgUrl || item.skuImgUrl}}"
                           @tap="goGoodsDetail({{item.itemId}})"></image>
                    <view class="goods-container">
                        <view class="goods-container__name">{{item.itemName}}</view>
                        <view class="goods-container__sku">{{item.skuAttr}}</view>
                        <view class="goods-container-price">
                            <view class="goods-container-price__discount">{{filter.accDiv(item.skuSalePrice, 100)}}</view>
                        </view>
                        <view class="goods-item__number">x{{item.skuNumber}}</view>
                    </view>
                </view>
            </repeat>
        </view>
        <view>
            <van-cell-group>
                <van-field
                    value="{{ params.remark }}"
                    label="备注"
                    type="textarea"
                    autosize
                    bind:change="changeRemark"
                    border="{{ false }}"
                    disabled="{{orderStatus >= 1}}"
                />
            </van-cell-group>
        </view>
        <view class="cart-submit" wx:if="{{orderStatus === 0}}">
            <van-submit-bar
                price="{{price}}"
                button-text="付款"
                bind:submit="wxpay"
                tip="{{ true }}"
                custom-class="cart-submit__bar"
                button-class="cart-submit__button"
            >
            </van-submit-bar>
        </view>
        <view class="logistics">
            <view class="logistics-title">物流信息</view>
            <view wx:if="{{expressTraces.length > 0}}" class="logistics-line"></view>
            <view wx:if="{{expressTraces.length > 0}}">
                <repeat for="{{expressTraces}}" key="item.id">
                    <view class="logistics-item">
                        <view class="logistics-item__time">{{item.AcceptTime}}</view>
                        <view wx:if="{{index === (expressTraces.length - 1)}}" class="logistics-item__desc active">{{item.AcceptStation}}</view>
                        <view wx:else class="logistics-item__desc">{{item.AcceptStation}}</view>
                    </view>
                </repeat>
            </view>
            <view wx:else class="logistics-nodata">暂无物流信息</view>
        </view>
    </view>
</template>

<script>
    import wepy from 'wepy';
    import goods from '../components/goods';
    import API from '@/utils/http/api';
    import filter from '../utils/filter/index.wxs';

    const api = new API();

    export default class orderConfirm extends wepy.page {
        config = {
            navigationBarTitleText: '订单详情',
            usingComponents: {
                'van-radio': '../components/vant-weapp/radio/index',
                'van-radio-group': '../components/vant-weapp/radio-group/index',
                "van-submit-bar": "../components/vant-weapp/submit-bar/index",
                'van-cell': '../../components/vant-weapp/cell/index',
                'van-cell-group': '../../components/vant-weapp/cell-group/index',
                'van-field': '../../components/vant-weapp/field/index',
            }
        };
        data = {
            currentAddressList: [],
            goodsInfo: [],
            price: 0,
            params: {
                remark: '',
                deliveryType: '1',       // 1快递，2其他
                tradeFrom: '',
                orderId: ''
            },
            expressTraces: null,
            orderStatus: null,
        };
        components = {
            goods
        };
        wxs = {
            filter
        };

        onShow () {
            let pages = getCurrentPages();
            let {options} = pages.pop();
            // 订单列表过来的
            this.params.tradeFrom = 1;
            this.params.orderId = options.orderId;
            this.initPage();
            this.getOrderDetail();
        }

        initPage () {
            this.price = 0;
            this.$apply();
        }

        async getOrderDetail () {
            const res = await api.getOrderDetail({
                orderId: this.params.orderId
            });
            if(res.code === 200) {
                const {
                    remark,
                    deliveryType,
                    recipientAddressDTO,
                    orderSkuDTOList,
                    orderStatus,
                    expressTraces
                } = res.data;
                this.params.remark = remark;
                this.params.deliveryType = deliveryType.toString();
                this.goodsInfo = [...orderSkuDTOList];
                this.currentAddressList = [recipientAddressDTO];
                this.orderStatus = orderStatus;
                this.expressTraces = JSON.parse(expressTraces).Traces || [];
                console.log(orderStatus);

                this.goodsInfo.forEach(item => {
                    this.price += (item.skuNumber * item.skuSalePrice);
                });

                this.$apply();
            }
        }

        async onPullDownRefresh () {
            wepy.stopPullDownRefresh();
        }

        async payPre (orderId) {
            const data = await api.payPre({
                orderId
            });
            if(data.code === 200) {
                this.wxpay(data.data)
            }
        }

        wxpay (param) {
            wx.requestPayment({
                timeStamp: param.timeStamp,
                nonceStr: param.nonceStr,
                package: `prepay_id=${param.repayId}`,
                signType: param.signType,
                paySign: param.sign,
                success: function (res) {
                    wx.removeStorageSync('orderInfo');
                    wx.removeStorageSync('addressInfo');0
                    wepy.redirectTo({
                        url: '/pages/result/paySuccess'
                    })
                },
                fail: function (res) {
                    wepy.redirectTo({
                        url: '/pages/result/payFail'
                    })
                },
                complete: function (res) {
                }
            })
        }

        methods = {
            upper (e) {
                console.log(e);
            },

            goGoodsDetail (id) {
                wepy.navigateTo({
                    url: `/pages/goodsDetail?goodsId=${id}`
                });
            },

            async wxpay () {
                this.payPre(this.params.orderId)
            },

            changeRemark (event) {
                this.params.remark = event.detail
            },

            onChangeDistributionWay (event) {
                this.params.deliveryType = event.detail;
            }
        }
    }
</script>

<style lang="scss" type="text/scss">
    @import "../../src/assets/config";

    .logistics {
        background: $white;
        margin-top: 5px;
        color: $font-color-light;
        position: relative;
        overflow: hidden;
        &-nodata {
            font-size: 12px;
            margin: 15px 20px;
            position: relative;
            min-height: 51px;
            text-align: center;
        }
        &-title {
            margin-top: 10px;
            text-align: center;
        }
        &-item {
            font-size: 12px;
            margin: 15px 20px;
            position: relative;
            min-height: 51px;
            &__time {
                position: absolute;
                width: 180rpx;
                left: 0;
                top: 0;
            }
            &__desc {
                margin-left: 200rpx;
                position: relative;
                &:before {
                    content: '';
                    width: 15px;
                    height: 15px;
                    background: $font-color-light;
                    border-radius: 100%;
                    position: absolute;
                    left: -50rpx;
                }
                &.active {
                    &:before {
                        content: '';
                        width: 15px;
                        height: 15px;
                        background: $primary-color;
                        border-radius: 100%;
                        position: absolute;
                        left: -50rpx;
                    }
                }
            }
        }
        &-line {
            width: 1px;
            position: absolute;
            left: 204rpx;
            top: 100rpx;
            bottom: 110rpx;
            background: #9fb2b4;
        }
    }

    .address {
        &-item{
            font-size: 12px;
            color: $font-color-dark;
            background: $white;
            padding: 5px;
            line-height: 20px;
            position: relative;
            &__phone {
                margin-left: 10px;
            }
        }
        &-way{
            color: $font-color-light;
            font-size: 14px;
            margin: 10px 0 5px 10px;
        }
    }

    .goods {
        &-wrapper {
            padding-bottom: 60px;
        }

        &-item {
            background: $white;
            margin: 5px;
            position: relative;
            overflow: hidden;

            &__close {
                background: $primary-color-red;
                color: $white;
                height: inherit;
                width: 65px;
                line-height: 120px;
                font-size: 12px;
                text-align: center;
            }

            &__image {
                width: 80px;
                height: 80px;
                margin: 5px;
                float: left;
            }

            &__number {
                position: absolute;
                right: 0;
                top: 98rpx;
                font-size: 12px;
                color: $font-color-dark;
            }
        }

        &-submit {
            position: fixed;
            bottom: 0;

            &__bar {
                z-index: 256;
            }

            &__button {
                background-color: $primary-color;
            }
        }

        &-container {
            float: left;
            margin: 10px 0 0 10px;
            position: relative;

            &__name {
                font-size: 12px;
                color: $font-color-dark;
                max-width: 500rpx;
                overflow: hidden;
                text-overflow: ellipsis;
                white-space: nowrap;
            }

            &__sku {
                font-size: 12px;
                color: $font-color-light;
                max-width: 200px;
                overflow: hidden;
                text-overflow: ellipsis;
                white-space: nowrap;
                margin-top: 4px;
            }

            &-price {
                font-size: 12px;
                text-align: left;
                color: red;
                padding: 0 4px;
                margin-top: 10px;

                &__discount {
                    display: inline-block;
                    position: relative;
                    margin: 0 0 0 10px;
                    font-size: 14px;

                    &:before {
                        content: '￥';
                        font-size: 14px;
                        position: absolute;
                        left: -15px;
                        top: 0;
                    }
                }
            }

            &__stepper {
                position: absolute;
                bottom: 5px;
                right: 0;
                z-index: 0;
            }
        }
    }

    .cart {
        &-submit {
            position: fixed;
            bottom: 0;
            &__checkbox {
                margin-left: 15px;
            }
            &__bar {
                z-index: 256;
            }
            &__button {
                background-color: $primary-color;
            }
        }
    }
</style>

<style type="text/scss" lang="scss">
    @import "../../src/assets/config";
    .cart {
        &-submit {
            &__bar {
                z-index: 10999!important;
            }
            &__button {
                background-color: $primary-color!important;
                border: 1px solid $primary-color!important;
            }
        }
    }

    .value-class {
        flex: none !important;
    }
</style>

